{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","width","window","innerWidth","height","innerHeight","useState","light","lightValue","handleClick","className","style","backgroundColor","position","left","top","transform","onClick","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAqCeA,MAjCf,WAEE,IAAIC,EAAQC,OAAOC,WACfC,EAASF,OAAOG,YAHP,EAKeC,oBAAS,GALxB,mBAKNC,EALM,KAKCC,EALD,KAOPC,EAAc,WAClBD,GAAYD,IAQd,OAEE,qBAAKG,UAAU,MAAMC,MAAO,CAACC,gBAAiB,UAAWX,MAAMA,EAAOG,OAAQA,GAA9E,SAEE,uBAAMO,MAAO,CAACE,SAAU,WAAYC,KAAM,MAAOC,IAAK,MAAOC,UAAW,yBAAxE,UAEGT,EAAQ,wBAAQI,MAAO,CAACC,gBAAiB,UAAWK,QAASR,EAArD,4BAA4F,wBAAQE,MAAO,CAACC,gBAAiB,UAAWK,QAASR,EAArD,2BAEpGF,EAAQ,mBAAGI,MAAO,CAACO,MAAO,WAAlB,2CAAkE,mBAAGP,MAAO,CAACO,MAAO,OAAlB,4CAE1EX,EAAQ,cAAC,IAAD,IAAkB,cAAC,IAAD,UClBpBY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d7348dc4.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, } from 'react';\nimport { HiLightBulb } from \"react-icons/hi\";\nimport { GoLightBulb } from \"react-icons/go\";\nfunction App() {\n\n  let width = window.innerWidth;\n  let height = window.innerHeight;\n\n  const [light, lightValue] = useState(false);\n\n  const handleClick = () => {\n    lightValue(!light)\n  }\n\n  \n\n\n  \n\n  return (\n\n    <div className=\"App\" style={{backgroundColor: \"#51E1ED\", width:width, height: height}}>\n\n      <span style={{position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)'}}>\n\n        {light ? <button style={{backgroundColor: 'orange'}} onClick={handleClick}>Turn light Off</button> : <button style={{backgroundColor: 'orange'}} onClick={handleClick}>Turn light On</button> }\n        \n        {light ? <p style={{color: '#5A20CB'}}>Light is Turned On right now </p> : <p style={{color: 'red'}}>Light is Turned Off right now </p>}\n\n        {light ? <HiLightBulb /> : <GoLightBulb /> }\n\n      </span>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n  // button: {\n  //   backgroundColor: 'orange',\n  //   marginLeft: 30,\n  //   marginRight: 30,\n  //   marginTop: 20,\n  //   height: 58,\n  //   borderRadius: 200,\n  //   alignItems: \"center\",\n  //   justifyContent: 'center',\n  //   flexDirection: \"row\"\n  // }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}